// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoEventTest.Models;

namespace PhotoEventTest.Migrations
{
    [DbContext(typeof(PHOTOGRAPHYEVENTContext))]
    [Migration("20190709120538_VoteScore")]
    partial class VoteScore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhotoEventTest.Models.EventUserPhotos", b =>
                {
                    b.Property<int>("EventId");

                    b.Property<string>("UserId")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Photo");

                    b.Property<string>("PhotoTitle")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("PhotoUploadDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("ThumbnailPhoto");

                    b.Property<string>("UserIdToVote")
                        .HasMaxLength(50);

                    b.Property<int>("VoteScore");

                    b.HasKey("EventId", "UserId")
                        .HasName("PK_Table");

                    b.HasIndex("UserId");

                    b.ToTable("EventUserPhotos");
                });

            modelBuilder.Entity("PhotoEventTest.Models.Events", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndDate")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("EventRule")
                        .HasColumnType("ntext");

                    b.Property<byte[]>("IntroImage");

                    b.Property<bool?>("IsClosed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("StartDate")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Winner")
                        .HasMaxLength(50);

                    b.HasKey("EventId")
                        .HasName("PK__tmp_ms_x__7944C810C5678DB0");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("PhotoEventTest.Models.Users", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(50);

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("EntryDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LastName")
                        .HasMaxLength(10);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C5D647209");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PhotoEventTest.Models.EventUserPhotos", b =>
                {
                    b.HasOne("PhotoEventTest.Models.Events", "Event")
                        .WithMany("EventUserPhotos")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_EventUserPhotos_Events");

                    b.HasOne("PhotoEventTest.Models.Users", "User")
                        .WithMany("EventUserPhotos")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_EventUserPhotos_Users");
                });
#pragma warning restore 612, 618
        }
    }
}
